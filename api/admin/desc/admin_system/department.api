import "../common.api"

info (
	title: "department API"
	desc:  ""
)

type (
	DepartmentCreateReq {
		Sort           *uint32 `json:"sort,optional" validate:"omitempty,gte=0"`
		DepartmentName *string `json:"department_name,optional" validate:"required,max=255"`
		Remark         *string `json:"remark,optional" validate:"omitempty,max=255"`
		ParentID       *string `json:"parent_id,optional" validate:"omitempty,len=20"`
	}
	DepartmentCreateRes {
		*CommonRes
		Result *string `json:"result"`
	}
	DepartmentDeleteReq {
		ID *string `path:"id" validate:"required,len=20"`
	}
	DepartmentDeleteRes {
		*CommonRes
	}
	DepartmentUpdateReq {
		ID             *string `path:"id" validate:"required,len=20"`
		Sort           *uint32 `json:"sort,optional" validate:"omitempty,gte=0"`
		DepartmentName *string `json:"department_name,optional" validate:"omitempty,max=255"`
		Remark         *string `json:"remark,optional" validate:"omitempty,max=255"`
		ParentID       *string `json:"parent_id,optional" validate:"omitempty,len=20"`
	}
	DepartmentUpdateRes {
		*CommonRes
	}
	DepartmentGet {
		ID             *string          `json:"id"`
		CreatedAt      *int64           `json:"created_at"`
		UpdatedAt      *int64           `json:"updated_at"`
		Sort           *uint32          `json:"sort"`
		DepartmentName *string          `json:"department_name"`
		Remark         *string          `json:"remark"`
		ParentID       *string          `json:"parent_id"`
		Path           *string          `json:"path"`
		Level          *uint32          `json:"level"`
		Children       []*DepartmentGet `json:"children"`
	}
	DepartmentGetReq {
		ID *string `path:"id" validate:"required,len=20"`
	}
	DepartmentGetRes {
		*CommonRes
		Result *DepartmentGet `json:"result"`
	}
	DepartmentQuery {
		*CommonPageRes
		List []*DepartmentGet `json:"list"`
	}
	DepartmentQueryReq {
		PageNo   *uint64 `form:"page_no,optional" validate:"omitempty,gte=0"`
		PageSize *uint64 `form:"page_size,optional" validate:"omitempty,gte=0"`
	}
	DepartmentQueryRes {
		*CommonRes
		Result *DepartmentQuery `json:"result"`
	}
)

@server (
	jwt:        Auth
	middleware: Auth
	group:      admin_system/department
	prefix:     /api/v1/admin_system/department
)
service admin {

	@handler createDepartment
	post / (DepartmentCreateReq) returns (DepartmentCreateRes)


	@handler deleteDepartment
	post /delete (IDsReq) returns (CommonRes)


	@handler deleteDepartmentOne
	delete /:id (DepartmentDeleteReq) returns (DepartmentDeleteRes)


	@handler updateDepartment
	put /:id (DepartmentUpdateReq) returns (DepartmentUpdateRes)


	@handler getDepartment
	get /:id (DepartmentGetReq) returns (DepartmentGetRes)


	@handler queryDepartment
	get / (DepartmentQueryReq) returns (DepartmentQueryRes)
}


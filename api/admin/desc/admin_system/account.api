import "../common.api"

info (
	title: "account API"
	desc:  ""
)

type (
	Token {
		AccessToken   *string `json:"access_token"`
		AccessExpire  *int64  `json:"access_expire"`
		RefreshToken  *string `json:"refresh_token"`
		RefreshExpire *int64  `json:"refresh_expire"`
	}
	LoginPasswordReq {
		Email    *string `json:"email,optional" validate:"required,email"`
		Password *string `json:"password,optional" validate:"required"`
	}
	LoginPasswordRes {
		*CommonRes
		Result *Token `json:"result"`
	}
	RefreshReq {
		RefreshToken *string `json:"refresh_token,optional" validate:"required"`
	}
	RefreshRes {
		*CommonRes
		Result *Token `json:"result"`
	}
	LogoutReq  {}
	LogoutRes {
		*CommonRes
	}
	AccountInfoReq  {}
	Menu {
		CodePath *string `json:"code_path"`
		Icon     *string `json:"icon"`
		MenuType *string `json:"menu_type"`
		Children []*Menu `json:"children"`
	}
	InfoBody {
		Email    *string `json:"email"`
		Name     *string `json:"name"`
		Nickname *string `json:"nickname"`
		Phone    *string `json:"phone"`
		Avatar   *string `json:"avatar"`
		Menus    []*Menu `json:"menus"`
	}
	AccountInfoRes {
		*CommonRes
		Result *InfoBody `json:"result"`
	}
)

@server (
	group:  admin_system/account
	prefix: /api/v1/admin_system/account
)
service admin {
	@handler loginPassword
	post /login_password (LoginPasswordReq) returns (LoginPasswordRes)

	@handler refresh
	post /refresh (RefreshReq) returns (RefreshRes)
}

@server (
	jwt:        Auth
	middleware: Auth
	group:      admin_system/account
	prefix:     /api/v1/admin_system/account
)
service admin {
	@handler logout
	post /logout (LogoutReq) returns (LogoutRes)

	@handler accountInfo
	get /info (AccountInfoReq) returns (AccountInfoRes)
}


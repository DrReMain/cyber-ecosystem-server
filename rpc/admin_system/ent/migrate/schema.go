// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminSystemDepartmentsColumns holds the columns for the "admin_system_departments" table.
	AdminSystemDepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sort", Type: field.TypeUint32, Default: 0},
		{Name: "department_name", Type: field.TypeString, Comment: "Department name | 部门名称"},
		{Name: "remark", Type: field.TypeString, Comment: "Department remark | 部门备注", Default: ""},
		{Name: "id_path", Type: field.TypeString, Comment: "Id path | ID路径", Default: ""},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 20, Comment: "Parent ID | 父级部门ID", Default: ""},
	}
	// AdminSystemDepartmentsTable holds the schema information for the "admin_system_departments" table.
	AdminSystemDepartmentsTable = &schema.Table{
		Name:       "admin_system_departments",
		Columns:    AdminSystemDepartmentsColumns,
		PrimaryKey: []*schema.Column{AdminSystemDepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_departments_admin_system_departments_children",
				Columns:    []*schema.Column{AdminSystemDepartmentsColumns[7]},
				RefColumns: []*schema.Column{AdminSystemDepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "department_created_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemDepartmentsColumns[1]},
			},
			{
				Name:    "department_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemDepartmentsColumns[2]},
			},
			{
				Name:    "department_sort",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemDepartmentsColumns[3]},
			},
			{
				Name:    "department_department_name",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemDepartmentsColumns[4]},
			},
			{
				Name:    "department_parent_id",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemDepartmentsColumns[7]},
			},
			{
				Name:    "department_id_path",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemDepartmentsColumns[6]},
			},
		},
	}
	// AdminSystemMenusColumns holds the columns for the "admin_system_menus" table.
	AdminSystemMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sort", Type: field.TypeUint32, Default: 0},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status | 1 正常 2 禁用", Default: 1},
		{Name: "title", Type: field.TypeString, Comment: "Menu title | 菜单标题"},
		{Name: "icon", Type: field.TypeString, Comment: "Menu icon | 菜单图标", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "code", Type: field.TypeString, Comment: "Menu code | 菜单CODE"},
		{Name: "code_path", Type: field.TypeString, Comment: "Menu code path | 菜单CODE路径 (code1.code2.code3)", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "menu_type", Type: field.TypeString, Comment: "Menu type | 菜单类型 (page/button)", SchemaType: map[string]string{"mysql": "varchar(16)"}},
		{Name: "menu_path", Type: field.TypeString, Comment: "Menu path | 菜单路径", Default: ""},
		{Name: "properties", Type: field.TypeString, Comment: "Menu properties | 菜单属性 (JSON字符串)", Default: "{}", SchemaType: map[string]string{"mysql": "varchar(2048)"}},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 20, Comment: "Parent MenuID | 父级菜单ID", Default: ""},
	}
	// AdminSystemMenusTable holds the schema information for the "admin_system_menus" table.
	AdminSystemMenusTable = &schema.Table{
		Name:       "admin_system_menus",
		Columns:    AdminSystemMenusColumns,
		PrimaryKey: []*schema.Column{AdminSystemMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_menus_admin_system_menus_children",
				Columns:    []*schema.Column{AdminSystemMenusColumns[12]},
				RefColumns: []*schema.Column{AdminSystemMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "menu_created_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemMenusColumns[1]},
			},
			{
				Name:    "menu_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemMenusColumns[2]},
			},
			{
				Name:    "menu_sort",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemMenusColumns[3]},
			},
			{
				Name:    "menu_status",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemMenusColumns[4]},
			},
			{
				Name:    "menu_code",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemMenusColumns[7]},
			},
			{
				Name:    "menu_code_path",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemMenusColumns[8]},
			},
			{
				Name:    "menu_menu_type",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemMenusColumns[9]},
			},
		},
	}
	// AdminSystemPositionsColumns holds the columns for the "admin_system_positions" table.
	AdminSystemPositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sort", Type: field.TypeUint32, Default: 0},
		{Name: "position_name", Type: field.TypeString, Comment: "Position name | 职位名称"},
		{Name: "code", Type: field.TypeString, Comment: "Position code | 职位编号"},
		{Name: "remark", Type: field.TypeString, Comment: "Position remark | 职位备注", Default: ""},
	}
	// AdminSystemPositionsTable holds the schema information for the "admin_system_positions" table.
	AdminSystemPositionsTable = &schema.Table{
		Name:       "admin_system_positions",
		Columns:    AdminSystemPositionsColumns,
		PrimaryKey: []*schema.Column{AdminSystemPositionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "position_created_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemPositionsColumns[1]},
			},
			{
				Name:    "position_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemPositionsColumns[2]},
			},
			{
				Name:    "position_sort",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemPositionsColumns[3]},
			},
			{
				Name:    "position_position_name",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemPositionsColumns[4]},
			},
			{
				Name:    "position_code",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemPositionsColumns[5]},
			},
		},
	}
	// AdminSystemResourcesColumns holds the columns for the "admin_system_resources" table.
	AdminSystemResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "method", Type: field.TypeString, Comment: "HTTP method | HTTP 请求类型", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "path", Type: field.TypeString, Comment: "HTTP path | HTTP 请求路径", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "menu_id", Type: field.TypeString, Size: 20, Comment: "Menu ID | 所属 Menu"},
	}
	// AdminSystemResourcesTable holds the schema information for the "admin_system_resources" table.
	AdminSystemResourcesTable = &schema.Table{
		Name:       "admin_system_resources",
		Columns:    AdminSystemResourcesColumns,
		PrimaryKey: []*schema.Column{AdminSystemResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_resources_admin_system_menus_resources",
				Columns:    []*schema.Column{AdminSystemResourcesColumns[5]},
				RefColumns: []*schema.Column{AdminSystemMenusColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "resource_created_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemResourcesColumns[1]},
			},
			{
				Name:    "resource_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemResourcesColumns[2]},
			},
			{
				Name:    "resource_menu_id_method_path",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemResourcesColumns[5], AdminSystemResourcesColumns[3], AdminSystemResourcesColumns[4]},
			},
		},
	}
	// AdminSystemRolesColumns holds the columns for the "admin_system_roles" table.
	AdminSystemRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sort", Type: field.TypeUint32, Default: 0},
		{Name: "role_name", Type: field.TypeString, Comment: "Role name | 角色名称"},
		{Name: "code", Type: field.TypeString, Comment: "Role code | 角色CODE"},
		{Name: "remark", Type: field.TypeString, Comment: "Role remark | 角色备注", Default: ""},
	}
	// AdminSystemRolesTable holds the schema information for the "admin_system_roles" table.
	AdminSystemRolesTable = &schema.Table{
		Name:       "admin_system_roles",
		Columns:    AdminSystemRolesColumns,
		PrimaryKey: []*schema.Column{AdminSystemRolesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_created_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemRolesColumns[1]},
			},
			{
				Name:    "role_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemRolesColumns[2]},
			},
			{
				Name:    "role_sort",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemRolesColumns[3]},
			},
			{
				Name:    "role_role_name",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemRolesColumns[4]},
			},
			{
				Name:    "role_code",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemRolesColumns[5]},
			},
		},
	}
	// AdminSystemUsersColumns holds the columns for the "admin_system_users" table.
	AdminSystemUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 20},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status | 1 正常 2 禁用", Default: 1},
		{Name: "password", Type: field.TypeString, Comment: "User password | 用户密码"},
		{Name: "email", Type: field.TypeString, Comment: "User email | 用户邮箱"},
		{Name: "name", Type: field.TypeString, Comment: "User name | 用户名", Default: ""},
		{Name: "nickname", Type: field.TypeString, Comment: "User nickname | 用户昵称", Default: ""},
		{Name: "phone", Type: field.TypeString, Comment: "User phone | 用户手机号", Default: ""},
		{Name: "avatar", Type: field.TypeString, Comment: "User avatar | 用户头像", Default: "", SchemaType: map[string]string{"mysql": "varchar(1024)"}},
		{Name: "remark", Type: field.TypeString, Comment: "User remark | 用户备注", Default: ""},
		{Name: "department_id", Type: field.TypeString, Size: 20, Comment: "User DepartmentID | 用户所属部门", Default: ""},
	}
	// AdminSystemUsersTable holds the schema information for the "admin_system_users" table.
	AdminSystemUsersTable = &schema.Table{
		Name:       "admin_system_users",
		Columns:    AdminSystemUsersColumns,
		PrimaryKey: []*schema.Column{AdminSystemUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_users_admin_system_departments_department",
				Columns:    []*schema.Column{AdminSystemUsersColumns[12]},
				RefColumns: []*schema.Column{AdminSystemDepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_created_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[1]},
			},
			{
				Name:    "user_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[2]},
			},
			{
				Name:    "user_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[3]},
			},
			{
				Name:    "user_status",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[4]},
			},
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{AdminSystemUsersColumns[6]},
			},
			{
				Name:    "user_name",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[7]},
			},
			{
				Name:    "user_nickname",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[8]},
			},
			{
				Name:    "user_phone",
				Unique:  false,
				Columns: []*schema.Column{AdminSystemUsersColumns[9]},
			},
		},
	}
	// AdminSystemRoleMenusColumns holds the columns for the "admin_system_role_menus" table.
	AdminSystemRoleMenusColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeString, Size: 20},
		{Name: "menu_id", Type: field.TypeString, Size: 20},
	}
	// AdminSystemRoleMenusTable holds the schema information for the "admin_system_role_menus" table.
	AdminSystemRoleMenusTable = &schema.Table{
		Name:       "admin_system_role_menus",
		Columns:    AdminSystemRoleMenusColumns,
		PrimaryKey: []*schema.Column{AdminSystemRoleMenusColumns[0], AdminSystemRoleMenusColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_role_menus_role_id",
				Columns:    []*schema.Column{AdminSystemRoleMenusColumns[0]},
				RefColumns: []*schema.Column{AdminSystemRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_system_role_menus_menu_id",
				Columns:    []*schema.Column{AdminSystemRoleMenusColumns[1]},
				RefColumns: []*schema.Column{AdminSystemMenusColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AdminSystemUserPositionsColumns holds the columns for the "admin_system_user_positions" table.
	AdminSystemUserPositionsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Size: 20},
		{Name: "position_id", Type: field.TypeString, Size: 20},
	}
	// AdminSystemUserPositionsTable holds the schema information for the "admin_system_user_positions" table.
	AdminSystemUserPositionsTable = &schema.Table{
		Name:       "admin_system_user_positions",
		Columns:    AdminSystemUserPositionsColumns,
		PrimaryKey: []*schema.Column{AdminSystemUserPositionsColumns[0], AdminSystemUserPositionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_user_positions_user_id",
				Columns:    []*schema.Column{AdminSystemUserPositionsColumns[0]},
				RefColumns: []*schema.Column{AdminSystemUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_system_user_positions_position_id",
				Columns:    []*schema.Column{AdminSystemUserPositionsColumns[1]},
				RefColumns: []*schema.Column{AdminSystemPositionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AdminSystemUserRolesColumns holds the columns for the "admin_system_user_roles" table.
	AdminSystemUserRolesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, Size: 20},
		{Name: "role_id", Type: field.TypeString, Size: 20},
	}
	// AdminSystemUserRolesTable holds the schema information for the "admin_system_user_roles" table.
	AdminSystemUserRolesTable = &schema.Table{
		Name:       "admin_system_user_roles",
		Columns:    AdminSystemUserRolesColumns,
		PrimaryKey: []*schema.Column{AdminSystemUserRolesColumns[0], AdminSystemUserRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_system_user_roles_user_id",
				Columns:    []*schema.Column{AdminSystemUserRolesColumns[0]},
				RefColumns: []*schema.Column{AdminSystemUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_system_user_roles_role_id",
				Columns:    []*schema.Column{AdminSystemUserRolesColumns[1]},
				RefColumns: []*schema.Column{AdminSystemRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminSystemDepartmentsTable,
		AdminSystemMenusTable,
		AdminSystemPositionsTable,
		AdminSystemResourcesTable,
		AdminSystemRolesTable,
		AdminSystemUsersTable,
		AdminSystemRoleMenusTable,
		AdminSystemUserPositionsTable,
		AdminSystemUserRolesTable,
	}
)

func init() {
	AdminSystemDepartmentsTable.ForeignKeys[0].RefTable = AdminSystemDepartmentsTable
	AdminSystemDepartmentsTable.Annotation = &entsql.Annotation{
		Table: "admin_system_departments",
	}
	AdminSystemMenusTable.ForeignKeys[0].RefTable = AdminSystemMenusTable
	AdminSystemMenusTable.Annotation = &entsql.Annotation{
		Table: "admin_system_menus",
	}
	AdminSystemPositionsTable.Annotation = &entsql.Annotation{
		Table: "admin_system_positions",
	}
	AdminSystemResourcesTable.ForeignKeys[0].RefTable = AdminSystemMenusTable
	AdminSystemResourcesTable.Annotation = &entsql.Annotation{
		Table: "admin_system_resources",
	}
	AdminSystemRolesTable.Annotation = &entsql.Annotation{
		Table: "admin_system_roles",
	}
	AdminSystemUsersTable.ForeignKeys[0].RefTable = AdminSystemDepartmentsTable
	AdminSystemUsersTable.Annotation = &entsql.Annotation{
		Table: "admin_system_users",
	}
	AdminSystemRoleMenusTable.ForeignKeys[0].RefTable = AdminSystemRolesTable
	AdminSystemRoleMenusTable.ForeignKeys[1].RefTable = AdminSystemMenusTable
	AdminSystemUserPositionsTable.ForeignKeys[0].RefTable = AdminSystemUsersTable
	AdminSystemUserPositionsTable.ForeignKeys[1].RefTable = AdminSystemPositionsTable
	AdminSystemUserRolesTable.ForeignKeys[0].RefTable = AdminSystemUsersTable
	AdminSystemUserRolesTable.ForeignKeys[1].RefTable = AdminSystemRolesTable
}

// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: admin_system.proto

package server

import (
	"context"

	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/admin_system"
	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/internal/logic/menuservice"
	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/internal/svc"
)

type MenuServiceServer struct {
	svcCtx *svc.ServiceContext
	admin_system.UnimplementedMenuServiceServer
}

func NewMenuServiceServer(svcCtx *svc.ServiceContext) *MenuServiceServer {
	return &MenuServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *MenuServiceServer) CreateMenu(ctx context.Context, in *admin_system.MenuBody) (*admin_system.BaseIDRes, error) {
	l := menuservicelogic.NewCreateMenuLogic(ctx, s.svcCtx)
	return l.CreateMenu(in)
}

func (s *MenuServiceServer) DeleteMenu(ctx context.Context, in *admin_system.IDsReq) (*admin_system.BaseRes, error) {
	l := menuservicelogic.NewDeleteMenuLogic(ctx, s.svcCtx)
	return l.DeleteMenu(in)
}

func (s *MenuServiceServer) UpdateMenu(ctx context.Context, in *admin_system.MenuBody) (*admin_system.BaseRes, error) {
	l := menuservicelogic.NewUpdateMenuLogic(ctx, s.svcCtx)
	return l.UpdateMenu(in)
}

func (s *MenuServiceServer) GetMenu(ctx context.Context, in *admin_system.IDReq) (*admin_system.MenuBody, error) {
	l := menuservicelogic.NewGetMenuLogic(ctx, s.svcCtx)
	return l.GetMenu(in)
}

func (s *MenuServiceServer) QueryMenu(ctx context.Context, in *admin_system.MenuListReq) (*admin_system.MenuListRes, error) {
	l := menuservicelogic.NewQueryMenuLogic(ctx, s.svcCtx)
	return l.QueryMenu(in)
}

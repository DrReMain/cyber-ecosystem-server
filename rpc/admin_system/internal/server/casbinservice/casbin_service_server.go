// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: admin_system.proto

package server

import (
	"context"

	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/admin_system"
	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/internal/logic/casbinservice"
	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/internal/svc"
)

type CasbinServiceServer struct {
	svcCtx *svc.ServiceContext
	admin_system.UnimplementedCasbinServiceServer
}

func NewCasbinServiceServer(svcCtx *svc.ServiceContext) *CasbinServiceServer {
	return &CasbinServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *CasbinServiceServer) QueryCasbinByRole(ctx context.Context, in *admin_system.CasbinReq) (*admin_system.CasbinRes, error) {
	l := casbinservicelogic.NewQueryCasbinByRoleLogic(ctx, s.svcCtx)
	return l.QueryCasbinByRole(in)
}

func (s *CasbinServiceServer) QueryRoleByMenu(ctx context.Context, in *admin_system.RoleFromMenuReq) (*admin_system.RoleFromMenuRes, error) {
	l := casbinservicelogic.NewQueryRoleByMenuLogic(ctx, s.svcCtx)
	return l.QueryRoleByMenu(in)
}

func (s *CasbinServiceServer) QueryRoleByRole(ctx context.Context, in *admin_system.RoleFromRoleReq) (*admin_system.RoleFromRoleRes, error) {
	l := casbinservicelogic.NewQueryRoleByRoleLogic(ctx, s.svcCtx)
	return l.QueryRoleByRole(in)
}

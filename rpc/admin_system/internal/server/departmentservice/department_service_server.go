// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: admin_system.proto

package server

import (
	"context"

	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/admin_system"
	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/internal/logic/departmentservice"
	"github.com/DrReMain/cyber-ecosystem-server/rpc/admin_system/internal/svc"
)

type DepartmentServiceServer struct {
	svcCtx *svc.ServiceContext
	admin_system.UnimplementedDepartmentServiceServer
}

func NewDepartmentServiceServer(svcCtx *svc.ServiceContext) *DepartmentServiceServer {
	return &DepartmentServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *DepartmentServiceServer) CreateDepartment(ctx context.Context, in *admin_system.DepartmentBody) (*admin_system.BaseIDRes, error) {
	l := departmentservicelogic.NewCreateDepartmentLogic(ctx, s.svcCtx)
	return l.CreateDepartment(in)
}

func (s *DepartmentServiceServer) DeleteDepartment(ctx context.Context, in *admin_system.IDsReq) (*admin_system.BaseRes, error) {
	l := departmentservicelogic.NewDeleteDepartmentLogic(ctx, s.svcCtx)
	return l.DeleteDepartment(in)
}

func (s *DepartmentServiceServer) UpdateDepartment(ctx context.Context, in *admin_system.DepartmentBody) (*admin_system.BaseRes, error) {
	l := departmentservicelogic.NewUpdateDepartmentLogic(ctx, s.svcCtx)
	return l.UpdateDepartment(in)
}

func (s *DepartmentServiceServer) GetDepartment(ctx context.Context, in *admin_system.IDReq) (*admin_system.DepartmentBody, error) {
	l := departmentservicelogic.NewGetDepartmentLogic(ctx, s.svcCtx)
	return l.GetDepartment(in)
}

func (s *DepartmentServiceServer) QueryDepartment(ctx context.Context, in *admin_system.DepartmentListReq) (*admin_system.DepartmentListRes, error) {
	l := departmentservicelogic.NewQueryDepartmentLogic(ctx, s.svcCtx)
	return l.QueryDepartment(in)
}
